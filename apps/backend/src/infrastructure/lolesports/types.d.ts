// Generated by https://quicktype.io

export interface Live {
    data: Data;
}

export interface Data {
    schedule: Schedule;
}

export interface Schedule {
    events: Event[];
}

export interface Event {
    id:         string;
    startTime:  string;
    state:      State;
    type:       string;
    blockName:  string;
    league:     League;
    tournament: Tournament;
    match:      Match;
    streams:    Stream[];
}

export interface League {
    id:              string;
    slug:            string;
    name:            string;
    image:           string;
    priority:        number;
    displayPriority: DisplayPriority;
}

export interface DisplayPriority {
    position: number;
    status:   string;
}

export interface Match {
    id:       string;
    teams:    MatchTeam[];
    strategy: Strategy;
    games:    Game[];
}

export interface Game {
    number: number;
    id:     string;
    state:  State;
    teams:  GameTeam[];
    vods:   any[];
}

export enum State {
    Completed = "completed",
    InProgress = "inProgress",
    Unstarted = "unstarted",
}

export interface GameTeam {
    id:   string;
    side: Side;
}

export enum Side {
    Blue = "blue",
    Red = "red",
}

export interface Strategy {
    type:  string;
    count: number;
}

export interface MatchTeam {
    id:     string;
    name:   string;
    slug:   string;
    code:   string;
    image:  string;
    result: Result;
    record: Record;
}

export interface Record {
    wins:   number;
    losses: number;
}

export interface Result {
    outcome:  null;
    gameWins: number;
}

export interface Stream {
    parameter:   string;
    locale:      string;
    mediaLocale: MediaLocale;
    provider:    string;
    countries:   string[];
    offset:      number;
    statsStatus: string;
}

export interface MediaLocale {
    locale:         string;
    englishName:    string;
    translatedName: string;
}

export interface Tournament {
    id: string;
}
